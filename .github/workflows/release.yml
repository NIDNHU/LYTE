name: Release Workflow

on:
  workflow_dispatch:
    inputs:
      release_channel:
        description: 'Type of release'
        required: true
        type: choice
        options:
        - Alpha
        - Dev
        - Patch
        - release
      release_version:
        description: 'Version of release (e.g. 1.0.3)'
        required: true
        type: string
      release_summary:
        description: 'Quick summary of release to append to title'
        required: true
        type: string
      release_notes:
        description: 'What was added in the release (Markdown, use \\n for new lines)'
        required: true
        type: string

permissions:
  contents: write

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          architecture: 'x64'

      - name: Install requirements
        run: |
          python -m pip install --upgrade pip
          pip install --prefer-binary -r Src/requirements.txt

      - name: Run PyInstaller
        run: |
          python -m PyInstaller main.spec

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: Windows_YTLM
          path: dist/YTLM.exe
      - name: Format release notes
        id: format_notes
        shell: pwsh
        run: |
          $notes = "${{ github.event.inputs.release_notes }}" -replace "\\n", "`n"
          "formatted_release_notes<<EOF`n$notes`nEOF" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.release_version }}-${{ github.event.inputs.release_channel }}
          name: "${{ github.event.inputs.release_channel }} Release v${{ github.event.inputs.release_version }} - ${{ github.event.inputs.release_summary }}"
          body: |
            What's New:

            ${{ steps.format_notes.outputs.formatted_release_notes }}
          files: dist/YTLM.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
